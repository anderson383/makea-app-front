// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test feature detail product Should render component and get product if product is selected in the store  1`] = `
<View
  style={
    {
      "flex": 1,
      "paddingTop": 54,
    }
  }
>
  <RCTScrollView>
    <View>
      <View>
        <Image
          source={
            {
              "height": 470,
              "uri": "",
            }
          }
          style={
            {
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          {
            "gap": 32,
            "padding": 16,
          }
        }
      >
        <View
          style={
            {
              "gap": 8,
              "position": "relative",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="addCart"
          >
            <View
              style={
                {
                  "height": 16,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 16,
                }
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight="16"
                bbWidth="18"
                fill="none"
                focusable={false}
                height={16}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    {
                      "flex": 0,
                      "height": 16,
                      "width": 18,
                    },
                  ]
                }
                vbHeight={16}
                vbWidth={18}
                width={18}
                xml=" 
<svg width="18" height="16" viewBox="0 0 18 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12.6634 0C11.2784 0 9.983 0.539931 9 1.50572C8.0166 0.540138 6.7214 0 5.3366 0C2.394 0 0 2.47813 0 5.52414C0 10.7572 8.2896 15.5994 8.6424 15.8029L8.984 16L9.3326 15.8168C9.6866 15.6307 18 11.1957 18 5.52414C18 2.47813 15.606 0 12.6634 0Z" fill="#FE2550"/>
</svg>

"
                xmlns="http://www.w3.org/2000/svg"
              >
                <RNSVGGroup
                  fill={null}
                  propList={
                    [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    d="M12.6634 0C11.2784 0 9.983 0.539931 9 1.50572C8.0166 0.540138 6.7214 0 5.3366 0C2.394 0 0 2.47813 0 5.52414C0 10.7572 8.2896 15.5994 8.6424 15.8029L8.984 16L9.3326 15.8168C9.6866 15.6307 18 11.1957 18 5.52414C18 2.47813 15.606 0 12.6634 0Z"
                    fill={
                      {
                        "payload": 4294845776,
                        "type": 0,
                      }
                    }
                    propList={
                      [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            style={
              {
                "fontSize": 20,
                "fontWeight": "bold",
                "width": "70%",
              }
            }
          >
            Product test
          </Text>
          <Text
            style={
              {
                "color": "#FE2550",
                "fontSize": 16,
                "fontWeight": "bold",
              }
            }
          >
            $Â 1,000
          </Text>
        </View>
        <View>
          <Text />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Test feature detail product Should render component and get product if product isn't selected in the store  1`] = `
<View
  style={
    {
      "flex": 1,
      "paddingTop": 54,
    }
  }
>
  <RCTScrollView>
    <View>
      <View>
        <Image
          source={
            {
              "height": 470,
              "uri": "",
            }
          }
          style={
            {
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          {
            "gap": 32,
            "padding": 16,
          }
        }
      >
        <View
          style={
            {
              "gap": 8,
              "position": "relative",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
            testID="addCart"
          >
            <View
              style={
                {
                  "height": 16,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "width": 16,
                }
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight="16"
                bbWidth="18"
                fill="none"
                focusable={false}
                height={16}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  [
                    {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    {
                      "flex": 0,
                      "height": 16,
                      "width": 18,
                    },
                  ]
                }
                vbHeight={16}
                vbWidth={18}
                width={18}
                xml=" 
<svg width="18" height="16" viewBox="0 0 18 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M9 1.50572C9.983 0.539931 11.2784 0 12.6634 0C15.606 0 18 2.47813 18 5.52414C18 11.1957 9.6866 15.6307 9.3326 15.8168L8.984 16L8.6424 15.8029C8.2896 15.5994 0 10.7572 0 5.52414C0 2.47813 2.394 0 5.3366 0C6.7214 0 8.0166 0.540138 9 1.50572ZM1.4694 5.52415C1.4694 8.95668 6.6198 12.8107 9.0114 14.2686C10.5278 13.3979 16.5306 9.68646 16.5306 5.52415C16.5306 3.31681 14.7958 1.52104 12.6634 1.52104C11.4458 1.52104 10.3234 2.09741 9.5846 3.10212L9 3.8969L8.4154 3.10212C7.6764 2.09741 6.5542 1.52104 5.3366 1.52104C3.2042 1.52104 1.4694 3.31681 1.4694 5.52415Z" fill="#212224"/>
</svg>
"
                xmlns="http://www.w3.org/2000/svg"
              >
                <RNSVGGroup
                  fill={null}
                  propList={
                    [
                      "fill",
                    ]
                  }
                >
                  <RNSVGPath
                    clipRule={0}
                    d="M9 1.50572C9.983 0.539931 11.2784 0 12.6634 0C15.606 0 18 2.47813 18 5.52414C18 11.1957 9.6866 15.6307 9.3326 15.8168L8.984 16L8.6424 15.8029C8.2896 15.5994 0 10.7572 0 5.52414C0 2.47813 2.394 0 5.3366 0C6.7214 0 8.0166 0.540138 9 1.50572ZM1.4694 5.52415C1.4694 8.95668 6.6198 12.8107 9.0114 14.2686C10.5278 13.3979 16.5306 9.68646 16.5306 5.52415C16.5306 3.31681 14.7958 1.52104 12.6634 1.52104C11.4458 1.52104 10.3234 2.09741 9.5846 3.10212L9 3.8969L8.4154 3.10212C7.6764 2.09741 6.5542 1.52104 5.3366 1.52104C3.2042 1.52104 1.4694 3.31681 1.4694 5.52415Z"
                    fill={
                      {
                        "payload": 4280361508,
                        "type": 0,
                      }
                    }
                    fillRule={0}
                    propList={
                      [
                        "fill",
                        "fillRule",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            style={
              {
                "fontSize": 20,
                "fontWeight": "bold",
                "width": "70%",
              }
            }
          >
            Product test
          </Text>
          <Text
            style={
              {
                "color": "#FE2550",
                "fontSize": 16,
                "fontWeight": "bold",
              }
            }
          >
            $Â 1,000
          </Text>
        </View>
        <View>
          <Text />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
